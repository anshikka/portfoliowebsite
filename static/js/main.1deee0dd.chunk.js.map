{"version":3,"sources":["Components/SocialMedia/SocialMedia.js","App.js","serviceWorker.js","index.js"],"names":["SocialMedia","this","props","networks","map","network","react_default","a","createElement","className","href","link","Icon","name","iconName","size","Component","App","basicInfo","profileImage","description","socialMedia","workData","companyName","companyLogo","positionName","date","workDescription","style","BackgroundStyle","particles_default","canvasClassName","particleStyle","Sticky","MenuStyle","Container","introductionStyle","class","headerStyle","src","headerImageStyle","alt","Components_SocialMedia_SocialMedia","socialMediaBarStyle","data-user","data-repo","backgroundColor","backgroundPosition","backgroundSize","backgroundRepeat","paddingTop","fontWeight","color","marginTop","marginBottom","margin","paddingBottom","textAlign","display","position","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1deee0dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'semantic-ui-react';\nimport './SocialMedia.css';\n\nclass SocialMedia extends Component {\n    render () {\n        return this.props.networks.map((network) =>\n            <a className=\"social-media-icon\" href={network.link}>\n                <Icon name={network.iconName} size='big'/>\n            </a>\n            \n        );\n    }\n}\n\n\n//PropTypes\nSocialMedia.propTypes = {\n    networks: PropTypes.array.isRequired\n}\n\nexport default SocialMedia;","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { Sticky } from 'semantic-ui-react'\nimport SocialMedia from './Components/SocialMedia/SocialMedia';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\nclass App extends Component {\n  basicInfo = {\n    profileImage: 'https://scontent.fhou1-2.fna.fbcdn.net/v/t1.0-9/48429124_2412101432153159_5881497613500416000_n.jpg?_nc_cat=105&_nc_oc=AQlz2tz1-PZ79lHxmpq4Sgr9tfnjD5zO14uOMD36UU4MBGvWDCyo0x3BWTwl3mI9gg8&_nc_ht=scontent.fhou1-2.fna&oh=07a31f0903a79912206fec81c7b2a77a&oe=5DB24672',\n    name: 'Hi, My name is Ansh Sikka',\n    description: 'I am a senior majoring in computer science at The University of Minnesota. My interests and skills include data science, cloud platform engineering, and the application of emerging technologies and tools.'\n  }\n\n  socialMedia = [\n      {iconName: 'facebook f', link: 'https://www.facebook.com/ansh.sikka'},\n      {iconName: 'linkedin', link: 'https://www.linkedin.com/in/ansh-sikka-42576068/'},\n      {iconName: 'github', link: 'https://github.com/anshikka'},\n      {iconName: 'medium m', link: 'https://medium.com/@sikka008'},\n      {iconName: 'spotify', link: 'https://open.spotify.com/user/anshikka?si=YQDzoPUJSrWZSVdiqs9zww'}\n  ]\n\n  workData = [\n    {\n      companyName: 'ExxonMobil',\n      companyLogo: 'https://isesisee2018.org/wp-content/uploads/2018/04/exxonmobil-logo-png-exxon-mobil-logo-1500-1024x576.png',\n      positionName: 'Cloud Engineering Intern',\n      date: 'May 2019 - August 2019',\n      workDescription: [\n        'Revamped the internal cloud web platform using Ghost CMS in an Agile Development environment', \n        'Worked with Handlebars.js to develop frontend components',\n        'Deployed the web platform onto Azure App Service',\n        'Incorporated cloud resources such as Azure Storage, Active Directory, and SendGrid Email Service',\n        'Trained other employees and interns on how to use Azure portal and DevOps'\n      ]\n    },\n    {\n      companyName: 'Quinnox, Inc.',\n      companyLogo: 'https://www.quinnox.com//sites/all/themes/home_service/images/quinnox-logo-home.png',\n      positionName: 'Deep/Machine Learning and Data Science Intern',\n      date: 'June 2018 - September 2018',\n      workDescription: [\n        'Implemented a demand/lead generation recommendation engine based on specific criteria using machine learning',\n        'Saved thousands of hours of manual work reading through company data for demand generation using efficient automation algorithms: Reduced a month of manual work into 15 minutes through the recommendation engine',\n        'Worked directly under the CTO',\n        'Was given training on basic deep learning and extensive training on machine learning'\n      ]\n    },\n    {\n      companyName: 'Vaco and Google, Inc.',\n      companyLogo: 'https://itallyllc.com/wp-content/uploads/2018/12/logo-vaco_800px.png',\n      positionName: 'Google Daydream Student Innovator',\n      date: 'December 2017 - May 2018',\n      workDescription: [\n        'Promoted and lead applications and development of Google\\'s Virtual Reality Platform, Google Daydream, throughout the University of Minnesota'\n      ]\n    }\n  ]\n\n  render() {\n    return (\n      <div className=\"OverlayBackground\" style={BackgroundStyle}>\n        <Particles canvasClassName=\"OverlayBackground\" style={particleStyle}></Particles>\n        <div className=\"App\">\n          <Sticky>\n            <div className=\"Header\">\n              <div className=\"Menu\" style={MenuStyle}>\n                <a href=\"https://drive.google.com/open?id=1-5gr7ui7rGrVDdc2DeNJ_pMC71OmQ3oY\">\n                  <h4>Resume</h4>\n                </a>\n                <a href=\"http://github.com/anshikka\">\n                  <h4>Projects</h4>\n                </a>\n              </div>\n            </div>\n          </Sticky>\n\n          \n          <Container>\n\n\n            <div className=\"Introduction\" style={introductionStyle}>\n              <h1 class=\"ui center aligned header\" style={headerStyle}>{this.basicInfo.name}</h1>\n              <img src={this.basicInfo.profileImage} class=\"ui medium circular image\" style={headerImageStyle} alt=''/>\n              <h3 class=\"ui center aligned header\" style={headerStyle}>{this.basicInfo.description}</h3>\n            </div>\n            \n            <div className=\"Social Media\">\n              <h3 class=\"ui center aligned header\" style={headerStyle}>Let's Connect!</h3>\n              <SocialMedia networks={this.socialMedia} style={socialMediaBarStyle}/>\n            </div>\n\n            <div class=\"github-card\" data-user=\"lepture\" data-repo=\"github-cards\"></div>\n\n          </Container>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nconst BackgroundStyle = {\n  backgroundColor: '#113951',\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat'\n}\n\nconst introductionStyle = {\n  paddingTop: '3vh'\n}\nconst headerStyle = {\n  fontWeight: '100',\n  color: 'white',\n  marginTop: '5vh',\n  marginBottom: '5vh'\n}\n\nconst headerImageStyle = {\n  margin: '0 auto'\n}\n\nconst socialMediaBarStyle = {\n  paddingBottom: '10vh'\n}\n\nconst MenuStyle = {\n  textAlign: 'right',\n  paddingTop: '3vh'\n}\n\n\nconst particleStyle = {\n  display:'blockParams',\n  position: 'absolute',\n  marginTop: '0px',\n  marginBottom: '0px'\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}