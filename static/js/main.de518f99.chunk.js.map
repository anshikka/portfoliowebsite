{"version":3,"sources":["assets/images/background.jpg","assets/pdfs/resume.pdf","assets/images/ansh.jpeg","Components/SocialMedia/SocialMedia.js","Components/Resume/Experience/WorkExperience/WorkDescription.js","Components/Resume/Experience/WorkExperience.js","Components/Home.js","Components/Resume/Experience/Projects.js","Components/Resume/Experience/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SocialMedia","socialMedia","iconName","link","this","map","network","react_default","a","createElement","className","href","Icon","name","size","Component","WorkDescription","props","workItems","item","style","listItemStyle","class","textAlign","color","WorkExperience","workData","companyName","companyLogo","positionName","date","workDescription","job","Item","Container","Header","headerStyle","as","Content","cardStyle","contentStyle","Description","WorkExperience_WorkDescription","Label","icon","content","fontSize","minHeight","overflowY","Home","basicInfo","profileImage","profile_pic","description","id","fluid","introductionStyle","src","headerImageStyle","alt","Divider","dividerStyle","horizontal","Components_SocialMedia_SocialMedia","workExperienceStyle","Group","Experience_WorkExperience","paddingTop","fontWeight","marginTop","marginBottom","paddingBottom","margin","justifyContent","Projects","state","error","isLoaded","repos","confirmCopied","project_name","toast","info","_this2","fetch","then","res","json","result","setState","_this3","Grid","stackable","columns","repo","Column","Card","header","extra","html_url","Button","lib","text","clone_url","onClick","Resume","numPages","pageNumber","onDocumentLoadSuccess","_ref","_this","pdfjs","GlobalWorkerOptions","workerSrc","concat","version","entry","file","resumeFile","onLoadSuccess","App","BackgroundStyle","background_pic","MenuStyle","react_router_dom","react_router","exact","path","component","backgroundColor","backgroundPosition","backgroundSize","backgroundImage","backgroundRepeat","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de518f99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.2ac63345.jpg\";","module.exports = __webpack_public_path__ + \"static/media/resume.17b9746a.pdf\";","module.exports = __webpack_public_path__ + \"static/media/ansh.6c91efc3.jpeg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'semantic-ui-react';\nimport './SocialMedia.css';\n\nclass SocialMedia extends Component {\n    socialMedia = [\n        {iconName: 'facebook f', link: 'https://www.facebook.com/ansh.sikka'},\n        {iconName: 'linkedin', link: 'https://www.linkedin.com/in/ansh-sikka-42576068/'},\n        {iconName: 'github', link: 'https://github.com/anshikka'},\n        {iconName: 'medium m', link: 'https://medium.com/@sikka008'},\n        {iconName: 'spotify', link: 'https://open.spotify.com/user/anshikka?si=YQDzoPUJSrWZSVdiqs9zww'}\n    ]\n    render () {\n        return this.socialMedia.map((network) =>\n            <a className=\"social-media-icon\" href={network.link}>\n                <Icon name={network.iconName} size='big'/>\n            </a>\n        );\n    }\n}\n\n\n//PropTypes\nSocialMedia.propTypes = {\n    networks: PropTypes.array.isRequired\n}\n\nexport default SocialMedia;","import React, { Component } from \"react\";\n\nclass WorkDescription extends Component {\n  render() {\n    return this.props.workItems.map((item) => (\n      <li style={listItemStyle} class=\"\">\n        {item}\n      </li>\n    ));\n  }\n}\n\nconst listItemStyle = {\n  textAlign: \"left\",\n  color: \"white\"\n};\n\nexport default WorkDescription;\n","import React, { Component } from \"react\";\nimport { Header, Container, Item, Label } from \"semantic-ui-react\";\nimport WorkDescription from \"./WorkExperience/WorkDescription\";\n\nclass WorkExperience extends Component {\n  workData = [\n    {\n      companyName: \"ExxonMobil\",\n      companyLogo:\n        \"https://1000logos.net/wp-content/uploads/2017/08/ExxonMobil-Logo.png\",\n      positionName: \"Data Engineer/Analyst\",\n      date: \"Sep 2020 - Present\",\n      workDescription: [\n        \"Working on a Zoom Analytics big data project, taking 500+ zoom events/sec as streaming data and processing it on Azure Functions and Azure Event Hub, eventually warehousing it on Snowflake\",\n        \"Helping main design leads and architects with big data architectures in a variety of projects\",\n        \"Streamlined company-wide cybersecurity machine monitoring using flow-based programming via Apache NiFi for ETL and reduced time to find cybersecurity holes from months to minutes\",\n        \"Used HANA SQL to develop Manual Data Input Systems and validations for the upper management\",\n        \"Working with Azure Functions, APIM, and KeyVault to develop an API to provide access to a central company data repository on Snowflake, helping reduce cost in data subscriptions (approx $75m in data subscription costs saved)\",\n      ],\n    },\n    {\n      companyName: \"ExxonMobil\",\n      companyLogo:\n        \"https://1000logos.net/wp-content/uploads/2017/08/ExxonMobil-Logo.png\",\n      positionName: \"Cloud Engineering Intern\",\n      date: \"May 2019 - August 2019\",\n      workDescription: [\n        \"Replatformed internal cloud adoption platform in an agile work environment to Microsoft Azure: Utilized blob storage, SQL, KeyVault, SendGrid, and search service.\",\n        \"Full Stack Web Development: Handlebars.js for frontend and Node.js for the backend\",\n        \"Customized open source CMS (Content Management System) to adapt to new website format and UX\",\n        \"Made the entire cloud adoption web platform content editable: No developer needed to make website changes. Eliminated content writers’ need to learn HTML/CSS to make basic blog edits to the platform\",\n        \"Teaching assistant to over 100 other interns and employees helping them get started with Azure\",\n      ],\n    },\n    {\n      companyName: \"Quinnox, Inc.\",\n      companyLogo: \"https://www.chetanasforum.com/images_og/quinnox-1.png\",\n      positionName: \"Deep/Machine Learning and Data Science Intern\",\n      date: \"June 2018 - September 2018\",\n      workDescription: [\n        \"Built a machine learning-based recommendation system with a high accuracy rate that provides a ranked list of top companies and leads to contact for Quinnox’s demand generation team\",\n        \"Used data mining and web scraping libraries such as BeautifulSoup and MechanicalSoup to retrieve large amounts of useful company, employee, and job data from different sources such as RainKing and LinkedIn to train an ML model and use it to get a list of top companies for contact/sales\",\n        \"Reduced two months of work from the demand generation team to 8-10 minutes by implementing efficient automation algorithms\",\n        \"Used big-data libraries such as NumPy and SciKitLearn for the machine learning process\",\n        \"Given training on machine learning and basic deep learning algorithms/libraries such as PyTorch and Tensorflow\",\n      ],\n    },\n  ];\n  render() {\n    return this.workData.map((job) => (\n      \n      <Item>\n        <Container textAlign='left'>\n          <Header style={headerStyle} as=\"h2\">\n            {job.positionName}\n          </Header>\n        </Container>\n        \n        <Item.Content style={cardStyle}>\n        <Container style={contentStyle} textAlign='center'>\n          <Item.Header style={headerStyle}>{job.companyName}</Item.Header>\n          <Item.Description>\n            <ul>\n              <WorkDescription\n                style={contentStyle}\n                workItems={job.workDescription}\n              />\n            </ul>\n          </Item.Description>\n        <Label icon='clock outline' content={job.date} />\n        </Container>\n\n        \n        \n        </Item.Content>\n        \n      </Item>\n      \n    ));\n  }\n}\n\nconst contentStyle = {\n  color: \"white\",\n};\n\nconst headerStyle = {\n  color: \"white\",\n  fontSize: \"large\"\n\n};\n\nconst cardStyle = {\n  minHeight: \"45vh\",\n  overflowY: \"auto\",\n};\n\n\nexport default WorkExperience;\n","import React, { Component } from \"react\";\nimport SocialMedia from \"./SocialMedia/SocialMedia\";\nimport WorkExperience from \"./Resume/Experience/WorkExperience\";\nimport { Item, Divider, Container } from \"semantic-ui-react\";\nimport profile_pic from \"../assets/images/ansh.jpeg\";\nimport \"./Home.css\";\nclass Home extends Component {\n  basicInfo = {\n    profileImage: profile_pic,\n    name: \"Hi, my name is Ansh Sikka\",\n    description:\n      \"I’m a software engineer who graduated from the University of Minnesota with a dedicated track in Big Data. My interests and skills include big data, cloud platform engineering, and the application of emerging technologies and tools. I currently work as a software engineer and design lead on the Corporate Data Solutions team at ExxonMobil in Houston.\",\n  };\n\n  render() {\n    return (\n      <div id=\"home\">\n        <Container fluid>\n        <div className=\"intro-contact\">\n          <div className=\"Introduction\" style={introductionStyle}>\n            \n              <h1 class=\"ui center aligned header\" style={headerStyle}>\n                {this.basicInfo.name}\n              </h1>\n              <img\n                src={this.basicInfo.profileImage}\n                class=\"ui medium circular image\"\n                style={headerImageStyle}\n                alt=\"\"\n              />\n              <Container>\n              <h3 class=\"ui center aligned header\" style={headerStyle}>\n                {this.basicInfo.description}\n              </h3>\n              </Container>\n            \n          </div>\n        </div>\n        </Container>\n\n        <Container>\n          <div className=\"Social Media\">\n            <Divider style={dividerStyle} horizontal>\n              Let's Connect!\n            </Divider>\n\n            <SocialMedia />\n          </div>\n        </Container>\n        <Container fluid>\n          <div className=\"WorkExperience\" style={workExperienceStyle}>\n            <Divider style={dividerStyle} horizontal>\n              Experience\n            </Divider>\n            <Container>\n            <Item.Group style={workExperienceStyle}>\n              <WorkExperience />\n            </Item.Group>\n            </Container>\n          </div>\n        </Container>\n        <br />\n      </div>\n    );\n  }\n}\n\nconst introductionStyle = {\n  paddingTop: \"0vh\",\n};\nconst headerStyle = {\n  fontWeight: \"100\",\n  color: \"white\",\n  marginTop: \"5vh\",\n  marginBottom: \"2vh\",\n};\n\nconst dividerStyle = {\n  color: \"white\",\n  fontSize: \"larger\",\n  paddingBottom: \"2vh\",\n};\n\nconst headerImageStyle = {\n  margin: \"0 auto\",\n};\n\nconst workExperienceStyle = {\n  margin: \"0 auto\",\n  justifyContent: \"center\",\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Button, Grid, Card, Icon } from \"semantic-ui-react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { toast } from \"react-toastify\";\nimport \"./Projects.css\";\n\nclass Projects extends Component {\n  state = {\n    error: null,\n    isLoaded: false,\n    repos: [],\n  };\n  // copy link to clipboard acknowledgement\n  confirmCopied = (project_name) => {\n    toast.info(project_name + \" clone link copied to clipboard!\");\n  };\n  \n  componentDidMount() { \n    // retrieve repos from Github API\n    fetch(\"https://api.github.com/users/anshikka/repos\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            repos: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n  render() {\n    return (\n      <div id=\"projects\">\n      <div className=\"projects-header\">\n        <a href=\"https://github.com/anshikka\">\n        <h1 className=\"title\">Projects</h1> \n        <Icon className=\"icon\" name='github' size='large'/>\n        </a>\n      </div>\n      <div className=\"projects-grid\">\n      <Grid stackable columns={3}>\n        {this.state.repos.map((repo) => (\n          <Grid.Column>\n            <Card className=\"repo-card\">\n              <Card.Content className=\"repo-name\" header={repo.name} />\n              <Card.Content className=\"repo-description\" description={repo.description} />\n              <Card.Content className=\"repo-actions\" extra>\n                <a href={repo.html_url}>\n                  <Button>\n                    <Icon name=\"github\"/>\n                    View on GitHub\n                  </Button>\n                </a>\n                <CopyToClipboard text={repo.clone_url}>\n                  <Button\n                    onClick={() => this.confirmCopied(repo.name)}\n                  >\n                    <Icon name=\"fork\" />\n                    Clone\n                  </Button>\n                </CopyToClipboard>\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n        ))}\n      </Grid>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\nimport { Icon, Container } from \"semantic-ui-react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport resumeFile from \"../../../assets/pdfs/resume.pdf\";\nimport \"./Resume.css\";\n\nclass Resume extends Component {\n  state = {\n    numPages: 1,\n    pageNumber: 1,\n  };\n  componentDidMount() {\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n  }\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n  };\n  render() {\n    const { pageNumber } = this.state;\n\n    return (\n      <div id=\"resume\">\n        <div className=\"resume-header\">\n          <a href=\"https://www.linkedin.com/in/ansh-sikka-42576068/\">\n            <h1 className=\"title\">Resume</h1>\n            <Icon className=\"icon\" name=\"linkedin\" size=\"large\" />\n          </a>\n        </div>\n          <Container fluid>\n            <Document\n              className=\"resume-preview\"\n              file={resumeFile}\n              onLoadSuccess={this.onDocumentLoadSuccess}\n            >\n              <Page pageNumber={pageNumber} />\n            </Document>\n          </Container>\n          \n            <div className=\"download-area\">\n              <a href={resumeFile}>\n                Download Resume{\" \"}\n                <Icon className=\"icon\" name=\"arrow down\" size=\"large\" />\n              </a>\n            </div>\n      </div>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { ToastContainer } from \"react-toastify\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport background_pic from \"./assets/images/background.jpg\";\nimport Home from \"./Components/Home\";\nimport Projects from \"./Components/Resume/Experience/Projects\";\nimport Resume from \"./Components/Resume/Experience/Resume\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"OverlayBackground\" style={BackgroundStyle} src={background_pic}>\n        <div className=\"App\">\n          <div className=\"Header\">\n            <Container fluid>\n            <div className=\"Menu\" style={MenuStyle}>\n              <a href=\"/\">\n                <h4>Home</h4>\n              </a>\n              <a href=\"/#/resume\">\n                <h4>Resume</h4>\n              </a>\n              <a href=\"/#/projects\">\n                <h4>Projects</h4>\n              </a>\n            </div>\n            </Container>\n          </div>\n\n          <Router>\n            <Container fluid>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/projects\" component={Projects} />\n                <Route exact path=\"/resume\" component={Resume} />\n              </Switch>\n            </Container>\n          </Router>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nconst BackgroundStyle = {\n  backgroundColor: \"#16213e\",\n  backgroundPosition: \"center\",\n  backgroundSize: \"cover\",\n  backgroundImage: `url(${background_pic})`,\n  backgroundRepeat: 'repeatY'\n};\n\nconst MenuStyle = {\n  textAlign: \"right\",\n  paddingTop: \"3vh\",\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}